#!/bin/bash

set -e

info() {
  echo
  echo "$@"
}

failandquit() {

  # Display the problem
  info "Bad grammar!  Here are the first generation differences:"
  #jfcsh "$gdir"/grmGrm.java "$gdir"/grmGrm.java.2
  diff "$gdir"/grmGrm.java.previous "$gdir"/grmGrm.java.new | diffhighlight

  # Reset to original
  info "Bad grammar!  Resetting to original"
  cp -a "$gdir"/grmGrm.java "$gdir"/grmGrm.java.failed
  cp -a "$gdir"/grmGrm.java.previous "$gdir"/grmGrm.java
  ./build.sh
  restored="$?"

  info "Check files $gdir/grmGrm.java.new and $gdir/grm.java.failed"

  if [ "$restored" = 0 ]
  then
    info "Original grammar restored.  Please fix $gdir/grm.grm"
  else
    info "FAILED to restore original grammar!  Sorry about that."
    exit 99
  fi
  exit 4
}

# echo -n "Redefine the parser's grammar grammar (y/n)? "
# read X
# [ "$X" = "y" ] || exit 9

# If CVS leaves files read-only, these can end up being copied into build/ and
# bin/ and then I can't recompile my grammars and I get annoyed.
chmod u+rw src build bin -R

gdir="src/tools/parser"

info "Compiling everything, making backup."
./build.sh
cp -a "$gdir"/grmGrm.java "$gdir"/grmGrm.java.previous

rm -f "$gdir"/grmGrm.java.2

info "Converting grammar into java ruleset"
jparse grm "$gdir"/grm.grm java "$@" > "$gdir"/grmGrm.java
[ "$?" = 0 ] || failandquit
if [ "$1" = "debug" ]; then
  edit "$gdir"/grmGrm.java
fi
cp "$gdir"/grmGrm.java "$gdir"/grmGrm.java.new

info "Compiling new grammar"
./build.sh

info "Test: Converting using new grammar"
jparse grm "$gdir"/grm.grm java $@ > "$gdir"/grmGrm.java
if [ "$1" = "debug" ]; then
  edit "$gdir"/grmGrm.java
fi

info "Are they different?"
set +e
cmp "$gdir"/grmGrm.java.previous "$gdir"/grmGrm.java
jfcsh "$gdir"/grmGrm.java.previous "$gdir"/grmGrm.java
set -e

info "Test: Convert once again"
./build.sh

info "Creating final ruleset to compare"
jparse grm "$gdir"/grm.grm java $@ > "$gdir"/grmGrm.java.2
if [ "$1" = "debug" ]; then
  edit "$gdir"/grmGrm.java
fi

info "Comparing first and second generations"
if cmp "$gdir"/grmGrm.java "$gdir"/grmGrm.java.2 > /dev/null 2>&1 ; then
  echo "New grammar installed OK"
else
  failandquit
fi

# echo "stringhash=$# stringunderscore=$_"

exit 0
