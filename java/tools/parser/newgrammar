#!/bin/bash

echo "Redefine the parser's grammar grammar?"
read X
[ "$X" = "y" ] || exit 0

echo "Compiling everything, making backup."
./build.sh
cp grmGrm.java grmGrm.java.bak

rm -f grmGrm.java.2

echo "Translating grammar to java"
jparse grm grm.grm java "$@" > grmGrm.java
if [ "$1" = "debug" ]; then
  edit grmGrm.java
fi

echo "Compiling new grammar"
./build.sh

echo "Translating using itself"
jparse grm grm.grm java $@ > grmGrm.java
if [ "$1" = "debug" ]; then
  edit grmGrm.java
fi

echo "Are they different?"
cmp grmGrm.java.bak grmGrm.java
jfcsh grmGrm.java.bak grmGrm.java

echo "Compiling own version"
./build.sh

echo "Creating child version to compare"
jparse grm grm.grm java $@ > grmGrm.java.2
if [ "$1" = "debug" ]; then
  edit grmGrm.java
fi

echo "Comparing first and second generations"
if cmp grmGrm.java grmGrm.java.2 > /dev/null 2>&1 ; then
  echo "New grammar installed OK"
else
  echo "Bad grammar!  Resetting to original"
  # Display the problem
  jfcsh grmGrm.java grmGrm.java.2
  # Reset to original
  echo "Bad grammar!  Resetting to original"
  cp grmGrm.java.bak grmGrm.java
  ./build.sh
fi

# echo "stringhash=$# stringunderscore=$_"
