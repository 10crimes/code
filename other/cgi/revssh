#!/bin/sh

# echo "DISABLED :-P"
# exit 0

. cgilib

SESSID=`getcgi "sessid"`
INIT=`getcgi "init"`
CHECKHOST=`getcgi "checkhost"`

if [ "$CHECKHOST" ]
then

	## Tell remote host whether local user wants to start revssh session.

	CHECKFILE="/tmp/revssh-host-$CHECKHOST"
	if [ -f "$CHECKFILE".on ]
	then echo "yes please init"
	else
		echo "no"
		echo -e "touch $CHECKFILE.on\nto accept revssh sessions from $CHECKHOST ($REMOTE_ADDR)" > "$CHECKFILE.off"
	fi

elif [ "$INIT" = true ]
then

	## Start revssh connection, cat remote host's stdin from local file.

	## TODO: keep server alive by occasionally sending newlines, for up to an hour, or until the session actually starts (client joins)

	echo "" > /tmp/revssh-client-input-$SESSID.txt
	echo "" > /tmp/revssh-client-output-$SESSID.txt
	chmod ugo+w /tmp/revssh-client-input-$SESSID.txt
	chmod ugo+r /tmp/revssh-client-output-$SESSID.txt
	# echo 'echo "Connexion established"'
	tail -f /tmp/revssh-client-input-$SESSID.txt

	## TODO: cleanup after session.  but this line is probably never reached; the whole process is probably killed by apache when the client disconnects.

else

	## Remote host has sent one line of it's stdout/err.  Cat it to local file.

	OUTPUT=`getcgi "output"`

	echo "$OUTPUT" >> /tmp/revssh-client-output-$SESSID.txt

fi
