/* When the returned function is called (e.g. by a setTimeout) it will have the
 * 'this' object you specified. */
Function.prototype.bind = function(thisObject)
{
	var func = this;
	var args = Array.prototype.slice.call(arguments, 1);
	return function() { return func.apply(thisObject, args.concat(Array.prototype.slice.call(arguments, 0))) };
}
