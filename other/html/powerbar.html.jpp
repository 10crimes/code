<HTML>
<HEAD>

<TITLE>Powerbar</TITLE>

<script type="text/javascript"> <!--

//** Constants:

var listOfOptions = [ "powerBarPosition", "moduleClockEnabled", "moduleJavaScriptTester", "moduleButtonsOnPowerBarForms" ];

//** Options: (will be load/saveable using cookies...)

var powerBarPosition = "top";
var moduleClockEnabled = true;
var moduleJavaScriptTester = true;
var moduleButtonsOnPowerBarForms = true;

//** Runtime constants:

var defaultSubmitButton = ( moduleButtonsOnPowerBarForms ? '<INPUT type="button" value="Go" onclick="submit()">' : "" );
var powerBarFrame; // == powerBarFrame
var mainFrame;
var powerBarLocationFormElement;
var lastKnownLocation = "";

//** Runtime variables:

//** PowerBar initialisation:

function createFrameset() {
	var distrib = ( powerBarPosition == "top" ? "20%,*" : "*,20%" );
	var startFrameSet     = '<frameset rows="'+distrib+'">';
	var powerBarFrameHtml = '<frame src="about:blank">';
	// var mainFrameHtml     = '<frame src="http://www.google.com/">';
	var mainFrameHtml     = '<frame src="about:blank">';
	var endFrameSet       = '</frameset>';
	var framesetHtml = "";
	framesetHtml += startFrameSet;
	framesetHtml += ( powerBarPosition == "top" ?  powerBarFrameHtml : mainFrameHtml );
	framesetHtml += ( powerBarPosition == "bottom" ?  powerBarFrameHtml : mainFrameHtml );
	framesetHtml += endFrameSet;
	document.writeln(framesetHtml);
	powerBarFrame  = window.frames[ ( powerBarPosition == "top" ? 0 : 1 ) ];
	mainFrame = window.frames[ ( powerBarPosition == "top" ? 1 : 0 ) ];
}

function generatePowerBar() {
	// Note: Since this HTML will sit in a different frame, calls to powerBar's functions and vars must be made with a preceding "top."
	var powerBarHtml = "";
	powerBarHtml += '<table width="100%"><tr><td align="center">';

	//// Location URL textfield:
	// powerBarHtml += '<FORM name="locationTextBox" action="javascript:top.changeLocation(top.mainFrame,this.location.value)">';
	powerBarHtml += '<FORM onsubmit="top.changeLocation(top.mainFrame,location.value)" action="javascript:">';
	powerBarHtml += 'Location:\n';
	powerBarHtml += '<INPUT name="location" type="text" size="30" value="http://www.google.com/">';
	// powerBarHtml += defaultSubmitButton;
	powerBarHtml += '<INPUT type="button" value="Go" onclick="top.changeLocation(top.mainFrame,location.value)">';
	powerBarHtml += '</FORM>';

	// Javascript tester textfield:
	if (moduleJavaScriptTester) {
		powerBarHtml += '</td><td>';
		// powerBarHtml += '<FORM action="javascript:top.processJs(code.value)">'; // worked fine for konq
		powerBarHtml += '<FORM onsubmit="top.processJs(code.value)" action="javascript:">'; // but this needed for mozilla
		powerBarHtml += 'JavaScript tester:\n';
		powerBarHtml += '<INPUT id="codeToExecute" name="code" type="text" size="30" value="type some javascript here">';
		// powerBarHtml += '<INPUT type="button" value="Go" onclick="submit()">'; // worked fine for konq
		powerBarHtml += '<INPUT type="button" value="Go" onclick="top.processJs(code.value)">'; // but mozilla needs this too!
		// powerBarHtml += defaultSubmitButton;
		powerBarHtml += '</FORM>';
	}

	// Options button:
	powerBarHtml += '</td><td>';
	powerBarHtml += '<INPUT type="button" value="Options..." onclick="top.editOptions()">';

	// Clock:
	if (moduleClockEnabled) {
		powerBarHtml += '</td><td>';
		powerBarHtml += '<div id="clockHook">clock loading...</div>';
	}

	powerBarHtml += '</td></tr></table>';
	writeToFrame(powerBarFrame,powerBarHtml);
	powerBarLocationFormElement = powerBarFrame.document.forms[0];
}

var timerId;
function refreshTimer() {
	clearTimeout(timerId);
	timerId = setTimeout('updatePowerBar()',1000);
}

function init() {
	createFrameset();
	generatePowerBar();
	// TODO: Make this use referer, or last in browser's history, or url provided via CGI.
	writeToFrame(mainFrame,"Welcome to PowerBar.  This addition to your browser will act like an extra toolbar, but will provide the latest radical Javascript technology from the Neuralyte laboratories, for your enhanced browsing pleazure.");
	updatePowerBar();
}

init();

//** PowerBar calls:

function updatePowerBar() {
	//// Watch for change of address in mainFrame from user following link, and update location textbox.
	//// Disabled because too sensitive (on init, and even if user is typing!)
	var urlOfMainFrame = mainFrame.location;
	// var urlInTextBox = powerBarFrame.document.forms[0].location;
	// if (urlOfMainFrame != urlInTextBox.value) {
	// if (urlOfMainFrame != lastKnownLocation) {
		// urlInTextBox.value = urlOfMainFrame;
		// lastKnownLocation = urlOfMainFrame;
	// }
	if (moduleClockEnabled) {
		var clockElem = powerBarFrame.document.getElementById('clockHook');
		clockElem.innerHTML = "" + new Date();
	}
	refreshTimer();
}

function changeLocation(frame,url) {
	// writeToFrame(frame,'<script type="text/javascript">window.location = "' + url + '";</script>');
	lastKnownLocation = url;
	frame.location = url;
	refreshTimer();
}

function processJs(codeToExecute) {
	var report = "I executed\n<CODE>" + codeToExecute + "</CODE>\nand got\n<RESULT>" + result + "</RESULT>";
	var result;
	try {
		result = eval(codeToExecute);
	} catch (e) {
		result = e;
	}
	var report = "I executed\n<CODE>" + codeToExecute + "</CODE>\nand got\n<RESULT>" + result + "</RESULT>";
	writeToFrame(mainFrame,toHtml(report));
	// alert(report);
	// refreshTimer();
}

function writeToFrame(frame,html) {
	frame.location = "about:blank";
	frame.document.body.innerHTML = html;
	// frame.document.open();
	// frame.document.write("<html><body>"); // you need /some/ kind of surrounding tag if you are just writing text
	// frame.document.write(html);
	// frame.document.write("</body></html>"); // these tags seemed sensible to me
	// frame.document.close();
}

function componentTypeForJSType(jsType) {
	return (
		jsType == "boolean" ? "checkbox" :
		jsType == "string" ? "text" :
		jsType == "number" ? "text" :
		"button"
	);
}

function editOptions() {
	var html = "";
	for (var i=0;i<listOfOptions.length;i++) {
		var option = listOfOptions[i];
		var value = eval(option);
		var type = typeof(value);
		var componentType = componentTypeForJSType(type);
		var componentValue = ( type == "boolean" ? value ? "checked" : "n" : value );
		html += "Option \""+option+"\": ";
		html += '<INPUT type="'+componentType+'" value="'+componentValue+'" action="alert(value)">';
		html += "<BR>";
		// html += "option "+option+" has value = "+value+" and type "+type+"<BR>";
	}
	writeToFrame(mainFrame,html);
}

//** Library functions:

function toHtml(text) {
	var map = new Array(); // TODO: more!
	map['\n'] = "<BR>";
	map[' '] = "&nbsp;";
	map['\"'] = "&quot;";
	map['<'] = "&lt;";
	map['>'] = "&gt;";
	var html = "";
	for (var i=0;i<text.length;i++) {
		var c = text.charAt(i);
		html += ( map[c] ? map[c] : c );
	}
	return html;
}

// --> </script>

</HEAD>
<BODY>If u don't have Javascript, you're not coming in.</BODY>
</HTML>
