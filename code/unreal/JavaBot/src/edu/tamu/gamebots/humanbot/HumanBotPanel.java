/*
 * HumanBotPanel.java
 *
 * Created on February 22, 2002, 12:42 PM
 */

package edu.tamu.gamebots.humanbot;

import edu.isi.gamebots.client.*;
import edu.tamu.gamebots.ui.*;
import us.ca.la.anm.util.io.*;
import javax.swing.*;
import java.util.*;
import java.net.*;

/**
 * <p>
 * The User interface portion of the HumanBot.
 * </p>
 * @author Ryan Rozich (rozich@tamu.edu)
 */
public class HumanBotPanel extends javax.swing.JPanel {
  
  HumanBot bot;
  boolean connected = false;
  
  /**
   * <p>
   * Creates new form HumanBotPanel
   * </p>
   * @param hBot The HumanBot that this interface is for.
   */
  public HumanBotPanel(HumanBot hBot) {
    bot = hBot;
    initComponents();
    bot.setSyncMessagesTextArea((UnrealMessageTextArea)serverMessagesField);
    bot.setASyncMessagesTextArea((UnrealMessageTextArea)asyncMessagesField);
    bot.setCurrentBotStatePanel((CurrentBotStatePanel)statePanel);
    bot.addJTableForMessages(asyncMessagesTable);
  }
  
  /** 
   * <p>
   * This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   * </p>
   */
  private void initComponents() {//GEN-BEGIN:initComponents
    mainPanel = new javax.swing.JPanel();
    jTabbedPane1 = new javax.swing.JTabbedPane();
    messagesPanel = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    serverMessagesField = new UnrealMessageTextArea();
    jButton1 = new javax.swing.JButton();
    messageTablePanel = new javax.swing.JPanel();
    jScrollPane3 = new javax.swing.JScrollPane();
    asyncMessagesTable = new javax.swing.JTable();
    asyncMessagesTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    tableButtonPanel = new javax.swing.JPanel();
    pauseTableUpdateButton = new javax.swing.JButton();
    shootButton = new javax.swing.JButton();
    runToButton = new javax.swing.JButton();
    turnToButton = new javax.swing.JButton();
    rotateLeftButton = new javax.swing.JButton();
    rotateRightButton = new javax.swing.JButton();
      runForwardsButton = new javax.swing.JButton();
    jPanel1 = new javax.swing.JPanel();
    jScrollPane2 = new javax.swing.JScrollPane();
    asyncMessagesField = new UnrealMessageTextArea();
    bottomPanel = new javax.swing.JPanel();
    inputPanel = new BotMessagesPanel(bot);
    statePanel = new CurrentBotStatePanel();

    setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

    mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.Y_AXIS));

    messagesPanel.setLayout(new javax.swing.BoxLayout(messagesPanel, javax.swing.BoxLayout.Y_AXIS));

    jScrollPane1.setPreferredSize(new java.awt.Dimension(400, 200));
    jScrollPane1.setViewportView(serverMessagesField);

    messagesPanel.add(jScrollPane1);

    jButton1.setText("Toggle Pause");
    jButton1.setMaximumSize(new java.awt.Dimension(4000, 27));
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    messagesPanel.add(jButton1);

    jTabbedPane1.addTab("Sync Messages", messagesPanel);

    messageTablePanel.setLayout(new javax.swing.BoxLayout(messageTablePanel, javax.swing.BoxLayout.Y_AXIS));

    jScrollPane3.setViewportView(asyncMessagesTable);

    messageTablePanel.add(jScrollPane3);

    tableButtonPanel.setLayout(new java.awt.GridLayout(1, 0));

    pauseTableUpdateButton.setText("Update");
    pauseTableUpdateButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        pauseTableUpdateButtonActionPerformed(evt);
      }
    });

    tableButtonPanel.add(pauseTableUpdateButton);

    shootButton.setText("Shoot");
    shootButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        shootButtonActionPerformed(evt);
      }
    });

    tableButtonPanel.add(shootButton);

    runToButton.setText("RunTo");
    runToButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        runToButtonActionPerformed(evt);
      }
    });

    tableButtonPanel.add(runToButton);

    turnToButton.setText("TurnTo");
    turnToButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        turnToButtonActionPerformed(evt);
      }
    });

    tableButtonPanel.add(turnToButton);

    rotateLeftButton.setText("<-");
    rotateLeftButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        rotateLeftButtonActionPerformed(evt);
      }
    });

    tableButtonPanel.add(rotateLeftButton);

      runForwardsButton.setText("^");
      // runForwardsButton.setEnabled(false); // @todo we don't yet know our current location or rotation, so we can't set a location in front of us to run to!
      runForwardsButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
          runForwardsButtonActionPerformed(evt);
        }
      });

      tableButtonPanel.add(runForwardsButton);

    rotateRightButton.setText("->");
    rotateRightButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        rotateRightButtonActionPerformed(evt);
      }
    });

    tableButtonPanel.add(rotateRightButton);

    messageTablePanel.add(tableButtonPanel);

    jTabbedPane1.addTab("Visible Points", messageTablePanel);

    jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.X_AXIS));

    jScrollPane2.setViewportView(asyncMessagesField);

    jPanel1.add(jScrollPane2);

    jTabbedPane1.addTab("ASync Messages", jPanel1);

    mainPanel.add(jTabbedPane1);

    bottomPanel.setLayout(new javax.swing.BoxLayout(bottomPanel, javax.swing.BoxLayout.Y_AXIS));

    bottomPanel.setMaximumSize(new java.awt.Dimension(99999999, 50));
    inputPanel.setLayout(new javax.swing.BoxLayout(inputPanel, javax.swing.BoxLayout.X_AXIS));

    bottomPanel.add(inputPanel);

    mainPanel.add(bottomPanel);

    add(mainPanel);

    statePanel.setMaximumSize(new java.awt.Dimension(32767, 20));
    add(statePanel);

  }//GEN-END:initComponents

  private void rotateLeftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotateLeftButtonActionPerformed
    bot.rotate(-6000);
  }//GEN-LAST:event_rotateLeftButtonActionPerformed

  private void rotateRightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotateRightButtonActionPerformed
    bot.rotate(6000);
  }//GEN-LAST:event_rotateRightButtonActionPerformed

    private void runForwardsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runForwardsButtonActionPerformed
      bot.runForwards();
    }//GEN-LAST:event_runForwardsButtonActionPerformed

  private void turnToButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turnToButtonActionPerformed
    int selectedRow = asyncMessagesTable.getSelectedRow();
    if(asyncMessagesTable.getSelectedRow() != -1){
      String coord = (String)asyncMessagesTable.getValueAt(selectedRow, 2);
      bot.turnToLoc(coord);
    }
  }//GEN-LAST:event_turnToButtonActionPerformed
  
  private void runToButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runToButtonActionPerformed
    int selectedRow = asyncMessagesTable.getSelectedRow();
    if(asyncMessagesTable.getSelectedRow() != -1){
      String id = (String)asyncMessagesTable.getValueAt(selectedRow, 1);
      bot.runTo(id);
    }
  }//GEN-LAST:event_runToButtonActionPerformed
  
  private void shootButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shootButtonActionPerformed
    int selectedRow = asyncMessagesTable.getSelectedRow();
    if(asyncMessagesTable.getSelectedRow() != -1){
      String id = (String)asyncMessagesTable.getValueAt(selectedRow, 1);
      bot.shoot(id, false);
    }
  }//GEN-LAST:event_shootButtonActionPerformed
  
  private void pauseTableUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseTableUpdateButtonActionPerformed
    bot.setUpdateTable();
  }//GEN-LAST:event_pauseTableUpdateButtonActionPerformed
  
  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    ((UnrealMessageTextArea)serverMessagesField).togglePause();
  }//GEN-LAST:event_jButton1ActionPerformed
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel messageTablePanel;
  private javax.swing.JButton runToButton;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JButton jButton1;
  private javax.swing.JScrollPane jScrollPane3;
  private javax.swing.JPanel statePanel;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JButton pauseTableUpdateButton;
  private javax.swing.JTextPane asyncMessagesField;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JButton shootButton;
  private javax.swing.JButton turnToButton;
  private javax.swing.JPanel inputPanel;
  private javax.swing.JPanel bottomPanel;
  private javax.swing.JPanel messagesPanel;
  private javax.swing.JButton rotateLeftButton;
  private javax.swing.JButton rotateRightButton;
    private javax.swing.JButton runForwardsButton;
  private javax.swing.JTabbedPane jTabbedPane1;
  private javax.swing.JTextPane serverMessagesField;
  private javax.swing.JPanel mainPanel;
  private javax.swing.JTable asyncMessagesTable;
  private javax.swing.JPanel tableButtonPanel;
  // End of variables declaration//GEN-END:variables
  
}
