
/* WARNING! This file was auto-generated by jpp.  You probably want to be editing ./ClientIO.uc.jpp instead. */



//================================================================================
// ClientIO
//================================================================================

// TODO: When logger starts up, would be nice to log the date+time and the current map and the server.
// TODO: If we wanna be really nice, we could offer %m=message %n=sender_name %t=time %w=mapname %s=servername %d=date etc., and let the user decide the output format.
// TODO: Only captures single lines.  If server send many lines, only the last one is caught.
//       To solve this, we could seek back in MsgText array to see if we can find the last line we recorded.

class ClientIO expands Actor config (ClientIO);

var config bool bLogAllPawns;

var PlayerPawn OurPlayer;

defaultproperties {
bLogAllPawns=true
}

function PostBeginPlay() { // In case spawned rather than selected from menu
 Super.PostBeginPlay();
 // This allows us to "summon ClientIO.ClientIO" in a local game:
 if (OurPlayer==None && PlayerPawn(Owner)!=None) {
  Init(PlayerPawn(Owner));
 } // TODO: Does this work if we were spawned client-side as a mutator?  Maybe we should check Role.
}

// This is the initialisation function
function Init(PlayerPawn o) {
 OurPlayer = o;
 Enable('Tick');
 Log("[ClientIO] Initialised for "$o.getHumanName());
}

event Tick (float DeltaTime) {
 // Log("### State at "$Level.TimeSeconds$" follows after "$DeltaTime);
 Log("### START STATE");
 Log("Time="$Level.TimeSeconds$" DeltaTime="$DeltaTime);
 SendUpdates(DeltaTime);
 Log("### END STATE");
 Super.Tick(DeltaTime);
}

// event Timer () {
// }

function SendUpdates(float DeltaTime) {
 local Pawn p;
 Log("TYPE ID NAME LOCATION VELOCITY VIEWROTATION PHYSICS WEAPON DUCK FIRE ALTFIRE"); // JUMP");
 foreach AllActors(class'Pawn',p) {
  Log(p.class $" "$ p $" "$ p.getHumanName() $" "$ p.Location $" "$ p.Velocity $" "$ p.ViewRotation $" "$ p.Physics $" "$ p.Weapon $" "$ p.bDuck $" "$ p.bFire);
  //  $" "$ p.bJump
  // TODO: Show the pawn's mesh (sprite?  and frame?)
 }
}

function bool WeAreOnline() {
 return False;
}
