# e(x) is expected = ground truth
# f(x) is fitted

# u must be provided.
# u=0.001
# These are the defaults for all images.
v=-20
w=0.00001
# u=U
# v=V
# w=W



# The advanced fitting method (using spacings) --------------------

set xlabel "line position y(n)" "Times-Roman,26"
set ylabel "line spacing Y(n)" "Times-Roman,26"

# Expected, with U,V,W known:
U=0.001667
V=-2401.85
W=-0.0359646
e(x)=U*(1+V*(((U-x)/(W*x-U*V)-0.5)+1))/(1+W*(((U-x)/(W*x-U*V)-0.5)+1))-U*(1+V*((U-x)/(W*x-U*V)-0.5))/(1+W*((U-x)/(W*x-U*V)-0.5))

# The actual fitting:
# This is an estimate of the real eqn, but more likely to converge because less complicated!
# x=(u-y)/(w*y-u*v)
# f(x)=u*v/(1+x*w)
# it gives rubbish results but good as a more stable initial fit
f(y)=u*v/(1+w*(u-y)/(w*y-u*v))
fit f(x) "gpldata.txt" via v,w
f(x)=u*(1+v*(((u-x)/(w*x-u*v)-0.5)+1))/(1+w*(((u-x)/(w*x-u*v)-0.5)+1))-u*(1+v*((u-x)/(w*x-u*v)-0.5))/(1+w*((u-x)/(w*x-u*v)-0.5))
fit f(x) "gpldata.txt" via v,w
