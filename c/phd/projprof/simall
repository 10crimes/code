#!/bin/sh

del *.results

# export PATH="$PATH:."

######## Parameters

# DOCUMENTS="doc-cen doc-cen-more dar-crpage2 leaflet-cen"
# DOCUMENTS="left cen right full"
# DOCUMENTS="left" # test "dar-crpage2-left30" # left cen right full"
# DOCUMENTS="full cen dar-crpage2-left30"
# DOCUMENTS="cen"
DOCUMENTS="leafletleft leafletfull leafletcen"
# DOCUMENTS="dar-crpage2-left30"
# DOCUMENTS="dummy" # when using LINES

# LINESTODO=`seq -w 30 -2 20`
# LINESTODO=`seq -w 30 -1 02`
# LINESTODO=30
LINESTODO=11

PPSCANMETHODS="hier" # full"

# PPMEASURES="square deriv"
# PPMEASURES="willbederived"
PPMEASURES="deriv"

# VVPMETHODS="spacings simple margins"
VVPMETHODS="spacings simple margins"

# NOISES=`seq -w 0 03 50`
# NOISES=`seq -w 51 03 60`
# NOISES=`seq -w 51 03 60`
NOISES=0

# ANGLES=`seq -w 20 03 50`
# ANGLES="20 40 60 80"
# ANGLES="60"
# FOCALS=`seq -w 0.5 0.3 3.0`
# FOCALS="0.5"
# ANGLES=`seq 30 10 60`
# ANGLES=`seq 5 5 85`
# ANGLES=`seq 5 5 85`
# ANGLES="50"
# ANGLES=`seq 5 6 85`
# ANGLES=`seq 30 10 60`
# ANGLES=`seq 5 3 85`
ANGLES=`seq 10 15 80`
# ANGLES="30"

FOCALS="4.0"

######## end params

touch start

showprogress () {
	D="$1"
	shift
	X="$1"
	shift
	echo "$D:  $*" | sed "s/\<$X\>/[$X]/g"
}

export FOCAL;
for FOCAL in $FOCALS; do

for DOCUMENT in $DOCUMENTS; do

	SRCNAME="simgs/$DOCUMENT"

	for PPSCANMETHOD in $PPSCANMETHODS; do

		for PPMEASURE in $PPMEASURES; do

			for VVPMETHOD in $VVPMETHODS; do

				# Do measure inline with scan method
				# if test "$PPSCANMETHOD" = hier; then
					# PPMEASURE=deriv
				# else
					# PPMEASURE=deriv # actually keep the same cos square can't handle noise
					# # PPMEASURE=square
				# fi

				PPPARAMS="
					-hvpcheat
					-res 180 -adapt 0.03 -maxpixels 2000
					-$PPMEASURE
					-gamma 0.0 -recwid 200 -light -oth 12
					-badx 35 -bady 21
				"
				# show bad point -badx 100 -bady 65"
				if test "$PPSCANMETHOD" = hier; then
					# Hierarchical scan
					PPPARAMS="$PPPARAMS -dolowresscan -lowres 60 -lowsmooth 1"
				# else
					# Full PP scan
					# PPPARAMS="$PPPARAMS"
				fi
				case "$VVPMETHOD" in
					"margins")
						# Margins method
						PPPARAMS="$PPPARAMS -usetwolines"
						;;
					"spacings")
						# Fitting with best method
						PPPARAMS="$PPPARAMS -spacings"
						;;
				esac
				PPCOM="./pp $PPPARAMS"
				export PPCOM;

				for NOISE in $NOISES; do

					for LINES in $LINESTODO; do

						if "$DOCUMENTS" = "dummy"; then
							SRCNAME="simgs/dar-crpage2-left$LINES"
						fi

						IFILE="$SRCNAME.bmp"
						RES="results.txt"
						FOCALRES="focalres.txt"

						rm -rf res
						mkdir -p res
						echo "0" > res/.nosync
						rm -f "$RES"
						echo "START" > "$RES"
						rm -f "$FOCALRES"
						echo "" > "$FOCALRES"

						# for roll in `listnums -6 6`; do
						roll="90";
							for yaw in $ANGLES; do
								for pitch in $ANGLES; do

									(
										showprogress "focal length  " $FOCAL $FOCALS
										showprogress "document      " $DOCUMENT $DOCUMENTS
										showprogress "pp scan method" $PPSCANMETHOD $PPSCANMETHODS
										showprogress "pp measure    " $PPMEASURE $PPMEASURES
										showprogress "vvp method    " $VVPMETHOD $VVPMETHODS
										showprogress "% noise       " $NOISE $NOISES
										showprogress "# lines       " $LINES $LINESTODO
										showprogress "yaw           " $yaw $ANGLES
										showprogress "pitch         " $pitch $ANGLES
									) > current

									echo
									echo "::::::::::::::::::::: $roll $yaw $pitch :::::::::::::::::::::"
									echo

									# simone "$IFILE" $roll $yaw $pitch -imgnoise $NOISE

									# simone

										OFILE="tmp.bmp"
										INVFILE="tmp-inv.bmp"

										SIMPARAMS="
										-qnd
										-centralise -focal $FOCAL -noise 0.0 -lines $LINES -yoff 0.001
										-roll $roll -yaw $yaw -pitch $pitch
										-overlay -image $IFILE $OFILE -size 0.7
										-gnuplot
										-imgnoise $NOISE
										"
										if test "$VVPMETHOD" = spacings; then
											SIMPARAMS="$SIMPARAMS -spacings"
										fi

										curseyellow
										echo ../gentestimg/simgen $SIMPARAMS
										cursegrey
										../gentestimg/simgen $SIMPARAMS | tee genres.txt

										mv gplsolve.txt gplsimsolve.txt
										mv gpldata.txt gplsimdata.txt
										mv gplfit.ps gplsimfit.ps

										curseyellow
										echo invert -i "$OFILE" -o "$INVFILE"
										cursegrey
										invert -i "$OFILE" -o "$INVFILE"
										echo ./testsim "$INVFILE" "$OFILE"
										rm recover.bmp
										# time ./testsim "$INVFILE" "$OFILE" > ppres.txt
										time ./testsim "$INVFILE" "$OFILE" | tee ppres.txt

									# end simone

									FOCALEST=`grep "Got focal length" ppres.txt | sed "s/Got focal length //"`
									echo "$yaw $pitch $FOCALEST" >> "$FOCALRES"
									cp genres.txt res/genres-r$roll-y$yaw-p$pitch.txt
									cp ppres.txt res/ppres-r$roll-y$yaw-p$pitch.txt
									./extractone $roll $yaw $pitch >> "$RES"
									gzip res/genres-r$roll-y$yaw-p$pitch.txt
									gzip res/ppres-r$roll-y$yaw-p$pitch.txt
									convert "lowresmap.bmp" -geometry 100 "res/r$roll-y$yaw-p$pitch-0lowresmap.jpg"
									convert "ppmap.bmp" -geometry 100 "res/r$roll-y$yaw-p$pitch-1ppmap.jpg"
									# convert "overlay.bmp" -geometry 100 "res/r$roll-y$yaw-p$pitch-3origsim.jpg"
									# convert "gpl0fit.ps" -geometry 100 "res/r$roll-y$yaw-p$pitch-2desfit.jpg"
									# convert "gplfit.ps" -geometry 100 "res/r$roll-y$yaw-p$pitch-3fit.jpg"
									convert "origover.bmp" -geometry 100 "res/r$roll-y$yaw-p$pitch-4ovr.jpg"
									if test -f "recover.bmp"; then
										convert "recover.bmp" -geometry 100 "res/r$roll-y$yaw-p$pitch-5rec.jpg"
									fi
									# ./showdesiredspacings.sh
									# convert "gpl1fit.ps" -geometry 300 "res/r$roll-y$yaw-p$pitch-6desfit.jpg"
									rm -f fit.log

								# echo "Press a key"
								# waitforkeypress

								done # pitch
							done # yaw
						# done # roll

						gunzip res/*.txt.gz
						tar cfz "$DOCUMENT-$PPSCANMETHOD-$VVPMETHOD-$NOISE-ppreg.tgz" res/*.txt

						# mv "$RES" "lines-$LINES.results"
						# mv "$RES" "$DOCUMENT-$PPSCANMETHOD-$VVPMETHOD.results"
						# mv "$RES" "$DOCUMENT-$PPSCANMETHOD-$PPMEASURE-$VVPMETHOD-l$LINES-n$NOISE.results"
						mv "$RES" "$DOCUMENT-$PPSCANMETHOD-$PPMEASURE-$VVPMETHOD-l$LINES-n$NOISE-f$FOCAL.results"

					done # lines

				done # noise

			done # vvp method

		done # hvp pp measure

	done # hvp searchspace scan method

done # document

done # focal

touch ./done
