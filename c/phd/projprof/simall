#!/bin/sh

# export PATH="$PATH:."

# DOCUMENTS="doc-cen doc-cen-more dar-crpage2 leaflet-cen"
# DOCUMENTS="left cen right full"

DOCUMENTS="dar-crpage2-left30" # left
PPSCANMETHODS="hier full"
PPMEASURES="square deriv"
# VVPMETHODS="spacings margins"
VVPMETHODS="spacings"
NOISES=`seq -w 0.0 0.05 0.5001`
# LINESTODO=`seq -w 30 -1 02`
ANGLES=`seq -w 20 10 50`

for DOCUMENT in $DOCUMENTS; do

	SRCNAME="simgs/$DOCUMENT"

	for PPSCANMETHOD in $PPSCANMETHODS; do

		for PPMEASURE in $PPMEASURES; do

			for VVPMETHOD in $VVPMETHODS; do

				PPPARAMS="
					-res 180 -adapt 0.03 -maxpixels 2000
					-$PPMEASURE
					-gamma 0.0 -recwid 200 -light -oth 12
				"
				# show bad point -badx 100 -bady 65"
				if test "$PPSCANMETHOD" = hier; then
					# Hierarchical scan
					PPPARAMS="$PPPARAMS -dolowresscan -lowres 60 -lowsmooth 1"
				# else
					# Full PP scan
					# PPPARAMS="$PPPARAMS"
				fi
				if test "$VVPMETHOD" = "margins"; then
					# Margins method
					PPPARAMS="$PPPARAMS -usetwolines"
				fi
				PPCOM="pp $PPPARAMS"
				export PPCOM;

				for NOISE in $NOISES; do

					# numlines=30
					# for numlines in $LINESTODO; do

						# 	echo
						# 	echo "LINES: $numlines -----------------------------------------"

						IFILE="$SRCNAME.bmp"
						RES="results.txt"
						FOCALRES="focalres.txt"

						rm -rf res
						mkdir -p res
						echo "0" > res/.nosync
						rm -f "$RES"
						echo "START" > "$RES"
						rm -f "$FOCALRES"
						echo "" > "$FOCALRES"

						# for roll in `listnums -6 6`; do
						roll="90";
							for yaw in $ANGLES; do
								for pitch in $ANGLES; do

									echo
									echo "::::::::::::::::::::: $roll $yaw $pitch :::::::::::::::::::::"
									echo
									simone "$IFILE" $roll $yaw $pitch -imgnoise $NOISE
									FOCALEST=`grep "Got focal length" ppres.txt | sed "s/Got focal length //"`
									echo "$yaw $pitch $FOCALEST" >> "$FOCALRES"
									mv genres.txt res/genres-r$roll-y$yaw-p$pitch.txt
									mv ppres.txt res/ppres-r$roll-y$yaw-p$pitch.txt
									extractone $roll $yaw $pitch >> "$RES"
									gzip res/genres-r$roll-y$yaw-p$pitch.txt
									gzip res/ppres-r$roll-y$yaw-p$pitch.txt
									convert "lowresmap.bmp" -geometry 100 "res/r$roll-y$yaw-p$pitch-0lowresmap.jpg"
									convert "ppmap.bmp" -geometry 100 "res/r$roll-y$yaw-p$pitch-1ppmap.jpg"
									# convert "overlay.bmp" -geometry 100 "res/r$roll-y$yaw-p$pitch-3origsim.jpg"
									# convert "gpl0fit.ps" -geometry 100 "res/r$roll-y$yaw-p$pitch-2desfit.jpg"
									# convert "gplfit.ps" -geometry 100 "res/r$roll-y$yaw-p$pitch-3fit.jpg"
									convert "origover.bmp" -geometry 100 "res/r$roll-y$yaw-p$pitch-4ovr.jpg"
									if test -f "recover.bmp"; then
										convert "recover.bmp" -geometry 100 "res/r$roll-y$yaw-p$pitch-5rec.jpg"
									fi
									# ./showdesiredspacings.sh
									# convert "gpl1fit.ps" -geometry 300 "res/r$roll-y$yaw-p$pitch-6desfit.jpg"
									rm -f fit.log

								done # pitch
							done # yaw
						# done # roll

						gunzip res/*.txt.gz
						tar cfz "$DOCUMENT-$PPSCANMETHOD-$VVPMETHOD-$NOISE-ppreg.tgz" res/*.txt

						# mv "$RES" "lines-$numlines.results"
						# mv "$RES" "$DOCUMENT-$PPSCANMETHOD-$VVPMETHOD.results"
						mv "$RES" "$DOCUMENT-$PPSCANMETHOD-$PPMEASURE-$VVPMETHOD-l$LINES-n$NOISE.results"

					# done lines

				done # noise

				# echo "Press a key"
				# waitforkeypress

			done # vvp method

		done # hvp pp measure

	done # hvp searchspace scan method

done # document

touch done
