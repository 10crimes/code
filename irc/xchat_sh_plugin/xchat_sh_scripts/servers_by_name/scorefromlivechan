# vim: filetype=sh syn=on

## TODO: The 20:00 below is bad - we could actually detect the initial clock from the first "Currently Playing" after the last mapswitch.

## TODO: This was written for CTF.  What will happen during AS, DM, TDM, DOM or Siege games?!

REPCHAN="$1"
LOGFILE="$LOGDIR/$NETWORK-$REPCHAN.log"

if [ ! -f "$LOGFILE" ]
then
	jshwarn "Cannot scan $REPCHAN since no logfile found: $LOGFILE"
	exit 1
fi

touch -d "2 minutes ago" /tmp/1minago
if newer /tmp/1minago "$LOGFILE"
then
	## OK this appears to work fine.
	# jshinfo "Not checking $REPCHAN for scores since the logfile is OLD!"
	exit 2
fi
rm -f /tmp/1minago

## Logfile should have lines like this:
## 2008-11-04 00:28:41 [#repchan] <RepBot> [02:37] New Score: Red Team 2:2 Blue Team

SCORE=`
	tail -n 2000 "$LOGFILE" |
	## We must convert "[20:00] *** Currently Playing: ..." to score 0-0
	## since this indicates a new map, but it does not provide a "New Score: 0:0" for us :P
	## We could add some other standard times here, eg. 15:00 but we can
	## not accept just any time since the "Currently Playing" message also
	## appear mid-game.
	sed 's+\[\(20\|15\):00\] \*\*\* Currently Playing:.*+New Score: Reddies 0:0 Bluees+' |
	grep "\<New Score:" |
	tail -n 1 |
	afterfirst "New Score:" |
	sed 's+.* \([0-9][0-9]*:[0-9][0-9]*\) .*+\1+ ; s+:+-+'
`
TIME=` tail -n 200 "$LOGFILE" | dropcols 1 2 3 4 | takecols 1 | grep '^\[.*\]$' | tail -n 1 `

if [ "$TIME" = "[20:00]" ] || [ "$TIME" = "[00:00]" ] || [ "$TIME" = "[15:00]" ] || [ "$TIME" = "[Warmup]" ]
then
	[ "$SCORE" = "0-0" ] && exit 0 ## Fresh map, game has not started.  Or unlucky exactly 5 minutes into 20 minutes game with 0 caps.
fi
## Actually that's only true for servers set for 20 minute games!
## If we really want to detect game start, look for:
## 2008-11-04 01:42:44 [#repchan] <RepBot> [19:59] * This match is being broadcasted to: #repchan

if [ "$TIME" = "[00:00]" ]
then TIME="Game Ended"
else TIME="`echo "$TIME" | sed 's+^\[[0:]*++;s+:+m+;s+\]$+s+'` remaining"
fi

echo "[$SCORE] $TIME"

