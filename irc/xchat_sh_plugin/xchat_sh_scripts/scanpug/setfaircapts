if [ ! "$CHANNEL" = "#ut.pug" ]
then exit 0
fi

# if [ "$NETWORK" ]
# then NETWORK="irc.$NETWORK"
# else NETWORK="irc.quakenet.org"
# fi

## Since MF now calls !setfaircapts automatically, we should wait a bit for Rival to respond to his !list...
sleep 3

# echo "!list"
# echo "Please be patient... I am slow..."
# sleep 15 ## 5 and 8 were TOO SLOW! (utb0t was lagging a bit).  Maybe the buffer does not get flushed :|
LIST_LINE=`
	tail -n 20 "$LOGDIR"/"$NETWORK-$CHANNEL".log |
	grep "<Rival>.*. 10/10 . " |
	tail -n 1 |
	afterfirst ". 10/10 . " |
	sed 's+^. + +g ; s+ .$++g ; s+\<[0-9][0-9]*) ++g' | tr ' ' '\n' | tr -d ' '
`
jshinfo "LIST_LINE=$LIST_LINE"

COUNT=`echo "$LIST_LINE" | wc -l`

if [ "$COUNT" = 10 ]
then :
else
	# echo "Sorry, I could not see 10 players so I cannot set captains."
	echo "I need to see the 10/10 !list first, then please retry."
	echo "!list"
	exit 0
fi

NICK="nB^" . restrict_repetitive_calls "30 seconds"

# echo "On my way, hang in there..."
echo "Setting fair captains..."

ORDERED_LIST=$(
	echo "$LIST_LINE" |
	while read PLAYER
	do
		AUTH=`sh scanpug/slowgetauth "$PLAYER"`
		# COUNT=`cat ~/.scanpug/*.picks | grep " $AUTH " | wc -l`
		# if [ "$COUNT" -gt 0 ]
		# then
			# SUM=`cat ~/.scanpug/*.picks | grep " $AUTH " | takecols 1 | awksum`
			# STRENGTH=$((10*SUM/COUNT))
			# STRENGTH=`echo "$STRENGTH" | sed 's+^.+\0.+'`
			# echo "$STRENGTH $PLAYER"
		# else
			# : # echo "4.52963ish? $PLAYER"
		# fi
		STRENGTH=`sh ./scanpug/getstrength "$AUTH"`
		[ "$STRENGTH" = "?.?" ] || echo "$STRENGTH $PLAYER"
	done |
	sort -n -k 1
)
jshinfo "ORDERED_LIST=$ORDERED_LIST"

COUNT=`echo "$ORDERED_LIST" | wc -l`

## We must catch problems here, otherwise drop gets caught on them later.
if [ ! "$COUNT" -gt 0 ] || [ "$COUNT" -lt 2 ]
then
	echo "I know fewer than 2 players in this pug, so I cannot set captains."
	exit 1
fi

COUNT=$((COUNT-2))

for X in 1 2 3 4 5
do
	TOSKIP=`seq 0 $COUNT | chooserandomline`
	# TOSKIP=`seq 0 6 | chooserandomline` ## we skip the last 2 noobies - they will never be set as captain :P
	CAPTS=` echo "$ORDERED_LIST" | drop "$TOSKIP" | head -n 2 | randomorder `

	## Check if difference > 1.5, and if so, retry.
	STRENGTHS=` echo "$CAPTS" | takecols 1 | sed 's+\.++' `
	# echo "sqrt((3.1 - 4.2)^2)*10" | bc -l
	SUM=`echo "$STRENGTHS" | tr '\n' '-' | sed 's+-$++'`
	DIFFINT=` verbosely echo "sqrt(($SUM)^2)" | bc -l | sed 's+\..*++' `
	if [ "$DIFFINT" -lt 13 ]
	then break
	else jshinfo "Captains differ by 1.3 or more, retrying. ($DIFFINT) [$CAPTS]"
	fi
done

### This failed dunno why!!  OK it was cos list had 7, and dropped 6.  ;p
COUNT=`echo "$CAPTS" | wc -l`
if [ ! "$COUNT" = 2 ]
# then echo "/me FAIL!  Blame noggin." ; exit 1
# then echo "/me FAIL!  Maybe I don't know any of you." ; exit 1
then error "FAIL: COUNT=$COUNT CAPTS=$CAPTS" ; echo "/me FAIL! ffs KGB" ; exit 1
fi

echo "$CAPTS" |
while read STRENGTH CAPT
do echo "!setcapt $CAPT (avgpick #$STRENGTH)"
done

sleep 10 ## Rival should now print his "Please pick from the list:" line.  5 was too short once.  Plus it's good to be slow, then we appear *after* _StalkeR_ ;)
BACKCHECK=20 sh ./scanpug/strengths

