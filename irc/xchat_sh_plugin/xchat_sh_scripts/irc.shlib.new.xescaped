MSG
=
true
 
##
 
no
 
more
 
notices!
 
 
But
 
since
 
this
 
is
 
set
 
on
 
import,
 
it
 
can
 
be
 
unset
 
before
 
notice
 
is
 
called
 
:D
\n
\n
notice
 
()
 
{
\n
 
 
 
 
 
 
 
 
##
 
With
 
parameters,
 
sends
 
the
 
string
 
to
 
the
 
user
 
with
 
a
 
/
notice
\n
 
 
 
 
 
 
 
 
##
 
Without
 
parameters,
 
sends
 
the
 
standard
 
input
 
to
 
the
 
user
 
in
 
a
 
/
notice
\n
 
 
 
 
 
 
 
 
if
 
[
 
"
$*
"
 
]
\n
 
 
 
 
 
 
 
 
then
 
echo
 
"
/
notice
 
$NICK
 
$*
"
\n
 
 
 
 
 
 
 
 
else
 
sed
 
-u
 
'
s+
^[^
/
]+
/
notice
 
'
"
$NICK
"
'
 
\
\
0+
'
\n
 
 
 
 
 
 
 
 
fi
 
|
\n
 
 
 
 
 
 
 
 
if
 
[
 
"
$MSG
"
 
]
 
&&
 
[
 
!
 
"
$REAL_NOTICE
"
 
]
\n
 
 
 
 
 
 
 
 
then
 
sed
 
'
s+
^
/
notice
 
+
/
msg
 
+g
'
\n
 
 
 
 
 
 
 
 
else
 
cat
\n
 
 
 
 
 
 
 
 
fi
 
#
 
|
\n
 
 
 
 
 
 
 
 
#
 
dog
 
##
 
Will
 
this
 
make
 
it
 
easier
 
for
 
me
 
to
 
separate
 
overlapping
 
I
/
O
 
from
 
utb0t?
 
 
No
 
it
 
didn
'
t
.
\n
}
\n
\n
rainbow
 
()
 
{
\n
 
 
 
 
 
 
 
 
#
 
printf
 
"
%s
"
 
"
$COLBOLD
"
\n
 
 
 
 
 
 
 
 
#
 
COLNUM
=
1
\n
 
 
 
 
 
 
 
 
#
 
COLNUM
=
`seq
 
-w
 
2
 
14
 
|
 
randomorder
 
|
 
head
 
-n
 
1`
\n
 
 
 
 
 
 
 
 
#
 
COLNUM
=
$(($$%13+1))
\n
 
 
 
 
 
 
 
 
COLNUM
=
$((`date
 
+
"
%s
"
`
/
5%13+1))
\n
 
 
 
 
 
 
 
 
echo
 
"
$*
"
 
|
 
#
 
sed
 
'
s+
.
+
\
\
0
\
\
\n
#+g
'
 
|
\n
 
 
 
 
 
 
 
 
while
 
IFS
=
"
"
 
read
 
-n
 
1
 
CHAR
\n
 
 
 
 
 
 
 
 
do
\n
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
#
 
COLNUM
=
`seq
 
-w
 
2
 
14
 
|
 
randomorder
 
|
 
head
 
-n
 
1`
\n
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
[
 
"
$COLNUM
"
 
-gt
 
14
 
]
 
&&
 
COLNUM
=
2
\n
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
COL
=
"
"
$COLNUM
"
,99
"
\n
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
COLNUM
=
$(($COLNU
M+
1))
\n
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
printf
 
"
%s
"
 
"
$COL$CHAR
"
\n
 
 
 
 
 
 
 
 
done
\n
 
 
 
 
 
 
 
 
printf
 
"
%s
\
\n
"
 
"
$COLRESET
"
\n
}
\n
